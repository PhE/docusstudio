{"_path":"/docs/team/version","_dir":"team","_draft":false,"_partial":false,"_locale":"","title":"version","description":"We follow semantic versioning\nand AngularJS Git Commit Message Conventions\nwith semantic-release.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"version"},"children":[{"type":"text","value":"version"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We follow "},{"type":"element","tag":"a","props":{"href":"https://semver.org/","rel":["nofollow"]},"children":[{"type":"text","value":"semantic versioning"}]},{"type":"text","value":"\nand "},{"type":"element","tag":"a","props":{"href":"https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#","rel":["nofollow"]},"children":[{"type":"text","value":"AngularJS Git Commit Message Conventions"}]},{"type":"text","value":"\nwith "},{"type":"element","tag":"a","props":{"href":"https://semantic-release.gitbook.io/semantic-release/","rel":["nofollow"]},"children":[{"type":"text","value":"semantic-release"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here are some commit message examples :"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A fix message (changing patch version number x.x."},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"X"}]},{"type":"text","value":") :"}]},{"type":"element","tag":"pre","props":{"code":"fix(core): couple of unit tests for IE9\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"fix(core): couple of unit tests for IE9\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A new feature message (changing minor version number x."},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"X"}]},{"type":"text","value":".x) :"}]},{"type":"element","tag":"pre","props":{"code":"feat(directive): ng:disabled, ng:checked, ng:multiple, ng:readonly, ng:selected\n\nNew directives for proper binding these attributes in older browsers (IE).\nAdded coresponding description, live examples and e2e tests.\n\nCloses #351\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"feat(directive): ng:disabled, ng:checked, ng:multiple, ng:readonly, ng:selected\n\nNew directives for proper binding these attributes in older browsers (IE).\nAdded coresponding description, live examples and e2e tests.\n\nCloses #351\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A breaking change message (changing major version number "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"X"}]},{"type":"text","value":".x.x) :"}]},{"type":"element","tag":"pre","props":{"code":"feat(deploy): simplify isolate scope bindings\n\nChanged the isolate scope binding options to:\n  - @attr - attribute binding (including interpolation)\n  - =model - by-directional model binding\n  - &expr - expression execution binding\n\nThis change simplifies the terminology as well as\nnumber of choices available to the developer. It\nalso supports local name aliasing from the parent.\n\nBREAKING CHANGE: isolate scope bindings definition has changed and\nthe inject option for the directive controller injection was removed.\n\nTo migrate the code follow the example below:\n\nBefore:\n\nscope: {\n  myAttr: 'attribute',\n  myBind: 'bind',\n  myExpression: 'expression',\n  myEval: 'evaluate',\n  myAccessor: 'accessor'\n}\n\nAfter:\n\nscope: {\n  myAttr: '@',\n  myBind: '@',\n  myExpression: '&',\n  // myEval - usually not useful, but in cases where the expression is assignable, you can use '='\n  myAccessor: '=' // in directive's template change myAccessor() to myAccessor\n}\n\nThe removed `inject` wasn't generaly useful for directives so there should be no code using it.\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"feat(deploy): simplify isolate scope bindings\n\nChanged the isolate scope binding options to:\n  - @attr - attribute binding (including interpolation)\n  - =model - by-directional model binding\n  - &expr - expression execution binding\n\nThis change simplifies the terminology as well as\nnumber of choices available to the developer. It\nalso supports local name aliasing from the parent.\n\nBREAKING CHANGE: isolate scope bindings definition has changed and\nthe inject option for the directive controller injection was removed.\n\nTo migrate the code follow the example below:\n\nBefore:\n\nscope: {\n  myAttr: 'attribute',\n  myBind: 'bind',\n  myExpression: 'expression',\n  myEval: 'evaluate',\n  myAccessor: 'accessor'\n}\n\nAfter:\n\nscope: {\n  myAttr: '@',\n  myBind: '@',\n  myExpression: '&',\n  // myEval - usually not useful, but in cases where the expression is assignable, you can use '='\n  myAccessor: '=' // in directive's template change myAccessor() to myAccessor\n}\n\nThe removed `inject` wasn't generaly useful for directives so there should be no code using it.\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:10.docs:80.team:version.md","_source":"content","_file":"10.docs/80.team/version.md","_extension":"md"}