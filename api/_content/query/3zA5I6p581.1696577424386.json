{"_path":"/docs/team/deploy/2022","_dir":"deploy","_draft":false,"_partial":false,"_locale":"","title":"microk8s deployment 2022 approch","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"microk8s-deployment-2022-approch"},"children":[{"type":"text","value":"microk8s deployment 2022 approch"}]},{"type":"element","tag":"h2","props":{"id":"setup"},"children":[{"type":"text","value":"setup"}]},{"type":"element","tag":"pre","props":{"code":"sudo apt install -y \\\n    qemu-system-x86 qemu-kvm qemu libvirt-dev libvirt-clients virt-manager virtinst bridge-utils cpu-checker virt-viewer\n\n# test if kvm is ok\nkvm-ok\n\n# add self to libvirt related groups\ncat /etc/group | grep libvirt | awk -F':' {'print $1'} | xargs -n1 sudo adduser $USER\n\n# add user to kvm group also\nsudo adduser $USER kvm\n\n# login/logout here ...\n\n\nsudo snap install multipass\n\n# connect the libvirt interface/plug\nsudo snap connect multipass:libvirt\n# you'll need to stop all the instances first\nmultipass stop --all\n# and tell Multipass to use libvirt\nmultipass set local.driver=libvirt\n\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo apt install -y \\\n    qemu-system-x86 qemu-kvm qemu libvirt-dev libvirt-clients virt-manager virtinst bridge-utils cpu-checker virt-viewer\n\n# test if kvm is ok\nkvm-ok\n\n# add self to libvirt related groups\ncat /etc/group | grep libvirt | awk -F':' {'print $1'} | xargs -n1 sudo adduser $USER\n\n# add user to kvm group also\nsudo adduser $USER kvm\n\n# login/logout here ...\n\n\nsudo snap install multipass\n\n# connect the libvirt interface/plug\nsudo snap connect multipass:libvirt\n# you'll need to stop all the instances first\nmultipass stop --all\n# and tell Multipass to use libvirt\nmultipass set local.driver=libvirt\n\n"}]}]},{"type":"element","tag":"h2","props":{"id":"multipass-microk8s-cluster"},"children":[{"type":"text","value":"multipass microk8s cluster"}]},{"type":"element","tag":"pre","props":{"code":"multipass launch jammy -n node2 --cloud-init cloud-config.yaml\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"multipass launch jammy -n node2 --cloud-init cloud-config.yaml\n"}]}]},{"type":"element","tag":"h2","props":{"id":"lan-microk8s-clister"},"children":[{"type":"text","value":"LAN microk8s clister"}]},{"type":"element","tag":"pre","props":{"code":"sudo apt update\nsudo apt dist-upgrade --yes\n#TODO: ufw (cloudinit)\n#TODO: fail2ban (cloudinit)\n#TODO: restrict ssh (cloudinit)\n\nsudo snap install microk8s --classic --channel=1.25/stable\n \nsudo usermod -a -G microk8s $USER\nsudo chown -f -R $USER ~/.kube\nsu - $USER\n# wait the cluster to be ready\nmicrok8s status --wait-ready\n#TODO: join the cluster here .... \nmicrok8s enable dns ingress\n#TODO: enable cert-manager \n#TODO: enable metallb\n#TODO: enable registry\n#TODO: enable mayastor\n#TODO: enable prometheus\n\n","language":"shell","meta":"","className":"language-shell shiki shiki-themes github-light github-dark","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":"sudo"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" apt"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" update"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":"sudo"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" apt"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" dist-upgrade"}]},{"type":"element","tag":"span","props":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" --yes"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"#TODO: ufw (cloudinit)"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"#TODO: fail2ban (cloudinit)"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"#TODO: restrict ssh (cloudinit)"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":"sudo"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" snap"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" install"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" microk8s"}]},{"type":"element","tag":"span","props":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" --classic"}]},{"type":"element","tag":"span","props":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" --channel=1.25/stable"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" "}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":"sudo"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" usermod"}]},{"type":"element","tag":"span","props":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" -a"}]},{"type":"element","tag":"span","props":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" -G"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" microk8s"}]},{"type":"element","tag":"span","props":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" $USER"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":"sudo"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" chown"}]},{"type":"element","tag":"span","props":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" -f"}]},{"type":"element","tag":"span","props":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" -R"}]},{"type":"element","tag":"span","props":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" $USER "}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":"~/.kube"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":"su"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" -"}]},{"type":"element","tag":"span","props":{"style":"color:#24292E;--shiki-dark:#E1E4E8"},"children":[{"type":"text","value":" $USER"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"# wait the cluster to be ready"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":"microk8s"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" status"}]},{"type":"element","tag":"span","props":{"style":"color:#005CC5;--shiki-dark:#79B8FF"},"children":[{"type":"text","value":" --wait-ready"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":14},"children":[{"type":"element","tag":"span","props":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"#TODO: join the cluster here .... "}]}]},{"type":"element","tag":"span","props":{"class":"line","line":15},"children":[{"type":"element","tag":"span","props":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":"microk8s"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" enable"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" dns"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" ingress"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":16},"children":[{"type":"element","tag":"span","props":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"#TODO: enable cert-manager "}]}]},{"type":"element","tag":"span","props":{"class":"line","line":17},"children":[{"type":"element","tag":"span","props":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"#TODO: enable metallb"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":18},"children":[{"type":"element","tag":"span","props":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"#TODO: enable registry"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":19},"children":[{"type":"element","tag":"span","props":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"#TODO: enable mayastor"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":20},"children":[{"type":"element","tag":"span","props":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"#TODO: enable prometheus"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"join the cluster"}]},{"type":"element","tag":"pre","props":{"code":"# vim /etc/hosts with :\n192.168.200.111     zalman-west\n192.168.200.115     precision3431\n192.168.200.126     precision-tower-3420\n#TODO: join the group : microk8s add-node\n\nmicrok8s kubectl get nodes\n","language":"shell","meta":"","className":"language-shell shiki shiki-themes github-light github-dark","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"# vim /etc/hosts with :"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":"192.168.200.111"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":"     zalman-west"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":"192.168.200.115"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":"     precision3431"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":"192.168.200.126"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":"     precision-tower-3420"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"style":"color:#6A737D;--shiki-dark:#6A737D"},"children":[{"type":"text","value":"#TODO: join the group : microk8s add-node"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"style":"color:#6F42C1;--shiki-dark:#B392F0"},"children":[{"type":"text","value":"microk8s"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" kubectl"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" get"}]},{"type":"element","tag":"span","props":{"style":"color:#032F62;--shiki-dark:#9ECBFF"},"children":[{"type":"text","value":" nodes"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"misc-setup"},"children":[{"type":"text","value":"misc setup"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"see "},{"type":"element","tag":"a","props":{"href":"https://gitlab.com/arundo-tech/paxpar/-/issues/2221","rel":["nofollow"]},"children":[{"type":"text","value":"https://gitlab.com/arundo-tech/paxpar/-/issues/2221"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"inspired from articles :"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://fabianlee.org/2018/08/27/kvm-bare-metal-virtualization-on-ubuntu-with-kvm/","rel":["nofollow"]},"children":[{"type":"text","value":"https://fabianlee.org/2018/08/27/kvm-bare-metal-virtualization-on-ubuntu-with-kvm/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://fabianlee.org/2019/04/01/kvm-creating-a-bridged-network-with-netplan-on-ubuntu-bionic/","rel":["nofollow"]},"children":[{"type":"text","value":"https://fabianlee.org/2019/04/01/kvm-creating-a-bridged-network-with-netplan-on-ubuntu-bionic/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://fabianlee.org/2021/07/05/kvm-installing-terraform-and-the-libvirt-provider-for-local-kvm-resources/","rel":["nofollow"]},"children":[{"type":"text","value":"https://fabianlee.org/2021/07/05/kvm-installing-terraform-and-the-libvirt-provider-for-local-kvm-resources/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://fabianlee.org/2021/07/25/kubernetes-microk8s-cluster-on-ubuntu-using-terraform-and-libvirt/","rel":["nofollow"]},"children":[{"type":"text","value":"https://fabianlee.org/2021/07/25/kubernetes-microk8s-cluster-on-ubuntu-using-terraform-and-libvirt/"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"from "},{"type":"element","tag":"a","props":{"href":"https://fabianlee.org/2019/04/01/kvm-creating-a-bridged-network-with-netplan-on-ubuntu-bionic/","rel":["nofollow"]},"children":[{"type":"text","value":"https://fabianlee.org/2019/04/01/kvm-creating-a-bridged-network-with-netplan-on-ubuntu-bionic/"}]},{"type":"text","value":" :"}]},{"type":"element","tag":"pre","props":{"code":"sudo apt install bridge-utils -y\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo apt install bridge-utils -y\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"TODO: continue ..."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"from "},{"type":"element","tag":"a","props":{"href":"https://fabianlee.org/2018/08/27/kvm-bare-metal-virtualization-on-ubuntu-with-kvm/","rel":["nofollow"]},"children":[{"type":"text","value":"https://fabianlee.org/2018/08/27/kvm-bare-metal-virtualization-on-ubuntu-with-kvm/"}]}]},{"type":"element","tag":"pre","props":{"code":"sudo apt install qemu-system-x86 qemu-kvm qemu libvirt-dev libvirt-clients virt-manager virtinst bridge-utils cpu-checker virt-viewer -y\n\n# test if kvm is ok\nkvm-ok\n\n# if this fails, you may have an older version still installed\nvirt-host-validate --version\n\n# the newest version comes from /usr/bin (not /usr/local/bin)\nwhich virt-host-validate\n\n# this utility comes from the libvirt-clients package\nsudo virt-host-validate\n\n# append these settings to avoid AppArmor issues\necho 'security_driver = \"none\"' | sudo tee -a /etc/libvirt/qemu.conf\necho 'namespaces = []' | sudo tee -a /etc/libvirt/qemu.conf\n\n# make qemu:///system available to group, not just root\necho 'unix_sock_group = \"libvirt\"' | sudo tee -a /etc/libvirt/libvirtd.conf\n\nsudo systemctl restart libvirtd\nsudo journalctl -u libvirtd.service --no-pager\n\n# should be 'active' after restart\nsudo systemctl status libvirtd\n\n# add self to libvirt related groups\ncat /etc/group | grep libvirt | awk -F':' {'print $1'} | xargs -n1 sudo adduser $USER\n\n# add user to kvm group also\nsudo adduser $USER kvm\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo apt install qemu-system-x86 qemu-kvm qemu libvirt-dev libvirt-clients virt-manager virtinst bridge-utils cpu-checker virt-viewer -y\n\n# test if kvm is ok\nkvm-ok\n\n# if this fails, you may have an older version still installed\nvirt-host-validate --version\n\n# the newest version comes from /usr/bin (not /usr/local/bin)\nwhich virt-host-validate\n\n# this utility comes from the libvirt-clients package\nsudo virt-host-validate\n\n# append these settings to avoid AppArmor issues\necho 'security_driver = \"none\"' | sudo tee -a /etc/libvirt/qemu.conf\necho 'namespaces = []' | sudo tee -a /etc/libvirt/qemu.conf\n\n# make qemu:///system available to group, not just root\necho 'unix_sock_group = \"libvirt\"' | sudo tee -a /etc/libvirt/libvirtd.conf\n\nsudo systemctl restart libvirtd\nsudo journalctl -u libvirtd.service --no-pager\n\n# should be 'active' after restart\nsudo systemctl status libvirtd\n\n# add self to libvirt related groups\ncat /etc/group | grep libvirt | awk -F':' {'print $1'} | xargs -n1 sudo adduser $USER\n\n# add user to kvm group also\nsudo adduser $USER kvm\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"relogin and ..."}]},{"type":"element","tag":"pre","props":{"code":"# relogin, then show group membership\nexec su -l $USER\nid | grep libvirt\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# relogin, then show group membership\nexec su -l $USER\nid | grep libvirt\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"add to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"~/.profile"}]},{"type":"text","value":" m:"}]},{"type":"element","tag":"pre","props":{"code":"# use same connection and objects as sudo\nexport LIBVIRT_DEFAULT_URI=qemu:///system\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# use same connection and objects as sudo\nexport LIBVIRT_DEFAULT_URI=qemu:///system\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"from "},{"type":"element","tag":"a","props":{"href":"https://fabianlee.org/2021/07/05/kvm-installing-terraform-and-the-libvirt-provider-for-local-kvm-resources/","rel":["nofollow"]},"children":[{"type":"text","value":"https://fabianlee.org/2021/07/05/kvm-installing-terraform-and-the-libvirt-provider-for-local-kvm-resources/"}]},{"type":"text","value":" :"}]},{"type":"element","tag":"pre","props":{"code":"sudo apt install jq unzip git -y\n\n# get latest version using github api\nTERRA_VERSION=$(curl -sL https://api.github.com/repos/hashicorp/terraform/releases/latest | jq -r \".tag_name\" | cut -c2-)\n\n# pull latest release\nwget -v4 https://releases.hashicorp.com/terraform/${TERRA_VERSION}/terraform_${TERRA_VERSION}_linux_amd64.zip\n\n# unzip\nunzip terraform_${TERRA_VERSION}_linux_amd64.zip\nrm terraform_${TERRA_VERSION}_linux_amd64.zip\n\n# set permissions and move into path\nchmod +x terraform\nsudo mv terraform /usr/local/bin/.\n\n# validate\nterraform version\n\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo apt install jq unzip git -y\n\n# get latest version using github api\nTERRA_VERSION=$(curl -sL https://api.github.com/repos/hashicorp/terraform/releases/latest | jq -r \".tag_name\" | cut -c2-)\n\n# pull latest release\nwget -v4 https://releases.hashicorp.com/terraform/${TERRA_VERSION}/terraform_${TERRA_VERSION}_linux_amd64.zip\n\n# unzip\nunzip terraform_${TERRA_VERSION}_linux_amd64.zip\nrm terraform_${TERRA_VERSION}_linux_amd64.zip\n\n# set permissions and move into path\nchmod +x terraform\nsudo mv terraform /usr/local/bin/.\n\n# validate\nterraform version\n\n"}]}]},{"type":"element","tag":"h2","props":{"id":"play-with-kvm"},"children":[{"type":"text","value":"play with KVM"}]},{"type":"element","tag":"pre","props":{"code":"wget http://archive.ubuntu.com/ubuntu/dists/focal/main/installer-amd64/current/legacy-images/netboot/mini.iso -O ~/Downloads/mini.iso\n\nvirsh list --all\n\nvirt-install --virt-type=kvm --name=ukvm-focal --osinfo=ubuntu20.04 --ram 1024 --vcpus=1 --virt-type=kvm --hvm --cdrom ~/Downloads/mini.iso --network network=default --graphics vnc --disk pool=default,size=20,bus=virtio,format=qcow2 --noautoconsole\n\n# open console to VM\nvirt-viewer ukvm-focal\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"wget http://archive.ubuntu.com/ubuntu/dists/focal/main/installer-amd64/current/legacy-images/netboot/mini.iso -O ~/Downloads/mini.iso\n\nvirsh list --all\n\nvirt-install --virt-type=kvm --name=ukvm-focal --osinfo=ubuntu20.04 --ram 1024 --vcpus=1 --virt-type=kvm --hvm --cdrom ~/Downloads/mini.iso --network network=default --graphics vnc --disk pool=default,size=20,bus=virtio,format=qcow2 --noautoconsole\n\n# open console to VM\nvirt-viewer ukvm-focal\n"}]}]},{"type":"element","tag":"h2","props":{"id":"play-with-gnome-boxes"},"children":[{"type":"text","value":"play with Gnome Boxes"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To see in Gnome Boxes the system vm :"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"add content to "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"~/.config/gnome-boxes/sources/QEMU System"}]}]},{"type":"element","tag":"pre","props":{"code":"[source]\nname=QEMU System\ntype=libvirt\nuri=qemu+unix:///system\nsave-on-quit=true\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"[source]\nname=QEMU System\ntype=libvirt\nuri=qemu+unix:///system\nsave-on-quit=true\n"}]}]},{"type":"element","tag":"h2","props":{"id":"play-with-virt-manager"},"children":[{"type":"text","value":"play with virt-manager"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Graphical UI for managing vm : "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"virt-manager"}]}]},{"type":"element","tag":"h2","props":{"id":"play-with-terraform"},"children":[{"type":"text","value":"play with terraform"}]},{"type":"element","tag":"pre","props":{"code":"cd services/docs/docs_dev/deploy/\n\n# download providers\nterraform init\n\n# create resources\nterraform apply\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cd services/docs/docs_dev/deploy/\n\n# download providers\nterraform init\n\n# create resources\nterraform apply\n"}]}]},{"type":"element","tag":"h2","props":{"id":"play-with-multipass"},"children":[{"type":"text","value":"play with multipass"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://multipass.run/docs/set-up-the-driver","rel":["nofollow"]},"children":[{"type":"text","value":"https://multipass.run/docs/set-up-the-driver"}]}]},{"type":"element","tag":"pre","props":{"code":"sudo snap install multipass\n\n# connect the libvirt interface/plug\nsudo snap connect multipass:libvirt\n# you'll need to stop all the instances first\nmultipass stop --all\n# and tell Multipass to use libvirt\nmultipass set local.driver=libvirt\n\n# start a vm\nmultipass launch jammy\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sudo snap install multipass\n\n# connect the libvirt interface/plug\nsudo snap connect multipass:libvirt\n# you'll need to stop all the instances first\nmultipass stop --all\n# and tell Multipass to use libvirt\nmultipass set local.driver=libvirt\n\n# start a vm\nmultipass launch jammy\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"the vm appears in virt-manger !"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"see "},{"type":"element","tag":"a","props":{"href":"https://multipass.run/docs/linux-tutorial","rel":["nofollow"]},"children":[{"type":"text","value":"https://multipass.run/docs/linux-tutorial"}]}]},{"type":"element","tag":"h2","props":{"id":"play-with-cloudinit"},"children":[{"type":"text","value":"play with cloudinit"}]},{"type":"element","tag":"pre","props":{"code":"# new vm with cloudinit !\nmultipass launch jammy -n node2 --cloud-init cloud-config.yaml\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# new vm with cloudinit !\nmultipass launch jammy -n node2 --cloud-init cloud-config.yaml\n"}]}]},{"type":"element","tag":"h2","props":{"id":"play"},"children":[{"type":"text","value":"play"}]},{"type":"element","tag":"pre","props":{"code":"git clone https://github.com/fabianlee/microk8s-nginx-istio.git\ncd microk8s-nginx-istio/\n\n\n# run terraform init and apply\ncd tf-libvirt\n\n# make ssh keypair for login as 'ubuntu'\nssh-keygen -t rsa -b 4096 -f id_rsa -C tf-libvirt -N \"\" -q\n\n# initialize terraform and its plugins\nterraform init\n\n# do creation\nterraform apply -auto-approve\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone https://github.com/fabianlee/microk8s-nginx-istio.git\ncd microk8s-nginx-istio/\n\n\n# run terraform init and apply\ncd tf-libvirt\n\n# make ssh keypair for login as 'ubuntu'\nssh-keygen -t rsa -b 4096 -f id_rsa -C tf-libvirt -N \"\" -q\n\n# initialize terraform and its plugins\nterraform init\n\n# do creation\nterraform apply -auto-approve\n"}]}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"html.dark .shiki span {color: var(--shiki-dark) !important;background: var(--shiki-dark-bg) !important;font-style: var(--shiki-dark-font-style) !important;font-weight: var(--shiki-dark-font-weight) !important;text-decoration: var(--shiki-dark-text-decoration) !important;}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"setup","depth":2,"text":"setup"},{"id":"multipass-microk8s-cluster","depth":2,"text":"multipass microk8s cluster"},{"id":"lan-microk8s-clister","depth":2,"text":"LAN microk8s clister"},{"id":"misc-setup","depth":2,"text":"misc setup"},{"id":"play-with-kvm","depth":2,"text":"play with KVM"},{"id":"play-with-gnome-boxes","depth":2,"text":"play with Gnome Boxes"},{"id":"play-with-virt-manager","depth":2,"text":"play with virt-manager"},{"id":"play-with-terraform","depth":2,"text":"play with terraform"},{"id":"play-with-multipass","depth":2,"text":"play with multipass"},{"id":"play-with-cloudinit","depth":2,"text":"play with cloudinit"},{"id":"play","depth":2,"text":"play"}]}},"_type":"markdown","_id":"content:10.docs:80.team:deploy:2022.md","_source":"content","_file":"10.docs/80.team/deploy/2022.md","_extension":"md"}